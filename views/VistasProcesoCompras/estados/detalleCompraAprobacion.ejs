<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title><%= title %></title>

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" 
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
<div class="container my-4">
  <h1 class="mb-3"><%= title %></h1>
  
  <p><strong>ID de Compra:</strong> <%= compraId %></p>
  <p><strong>Estado General:</strong> APROBACION</p>
  <p><strong>Progreso:</strong> <%= progress %>%</p>

  <div class="alert alert-info">
    <strong>Aprobación:</strong> Revisa la tabla con costos finales, IVA y retenciones.  
    Si todo está correcto, presiona “Aprobar y Generar Orden”.  
    O usa “Devolver a NEGOCIACION” si deseas reabrir cambios.
  </div>

  <!-- BOTONES -->
  <div class="mb-3 d-flex gap-2">
    <button class="btn btn-secondary" onclick="volverNegociacion()">
      Devolver a NEGOCIACION
    </button>
    <button class="btn btn-success" onclick="aprobarCompra()">
      Aprobar y Generar Orden
    </button>
  </div>

  <!-- Agrupación por proveedor -->
  <% 
    const providerIds = Object.keys(groupedByProvider);
    let totalGlobal = 0; // sumatoria final de todos los proveedores
  %>

  <div class="accordion" id="accordionProviders">
    <% providerIds.forEach(pid => {
       const items = groupedByProvider[pid];
       const pName = items[0]?.providerName || pid;

       // Calculamos un subtotal para este proveedor
       let sumProv = 0;
    %>

      <div class="accordion-item">
        <h2 class="accordion-header">
          <button class="accordion-button collapsed" type="button"
                  data-bs-toggle="collapse"
                  data-bs-target="#collapse_<%= pid %>">
            <%= pName %> (ID: <%= pid %>) - <%= items.length %> ítems
          </button>
        </h2>
        <div id="collapse_<%= pid %>"
             class="accordion-collapse collapse"
             data-bs-parent="#accordionProviders">
          <div class="accordion-body">
            <table class="table table-bordered align-middle">
              <thead class="table-light">
                <tr>
                  <th>Código</th>
                  <th>Nombre</th>
                  <th>Cant(g)</th>
                  <th>$/g</th>
                  <th>Subtotal</th>
                  <th>IVA</th>
                  <th>Ret</th>
                  <th>Total</th>
                  <th>No Encontrado?</th>
                  <th>Notas</th>
                </tr>
              </thead>
              <tbody>
                <% items.forEach(it => {
                   const grams = parseFloat(it.negotiatedQuantity)||0; // en 'g'
                   const priceGr = parseFloat(it.negotiatedPrice)||0;
                   const ivaPerc = parseFloat(it.iva)||0;     // 0,5,19...
                   const retPerc = parseFloat(it.ret)||0;     // 0,2.5,3.5
                   const subTotal = grams*priceGr;
                   const ivaVal = subTotal*(ivaPerc/100);
                   const retVal = subTotal*(retPerc/100);
                   const finalVal = subTotal+ivaVal-retVal;

                   // Acumulamos en sumProv
                   sumProv += finalVal;
                %>
                  <tr>
                    <td><%= it.code %></td>
                    <td><%= it.name %></td>
                    <td><%= grams.toFixed(0) %></td>
                    <td><%= priceGr.toFixed(4) %></td>
                    <td><%= subTotal.toFixed(2) %></td>
                    <td><%= ivaPerc %>% ( <%= ivaVal.toFixed(2) %> )</td>
                    <td><%= retPerc %>% ( <%= retVal.toFixed(2) %> )</td>
                    <td><%= finalVal.toFixed(2) %></td>
                    <td><%= it.notFound ? 'Sí' : 'No' %></td>
                    <td><%= it.notes || '' %></td>
                  </tr>
                <% }) %>
              </tbody>
            </table>

            <% 
              totalGlobal += sumProv;
            %>
            <p class="fw-bold">Subtotal Proveedor: $ <%= sumProv.toFixed(2) %></p>
          </div>
        </div>
      </div>

    <% }) %>
  </div>

  <hr/>
  <h4 class="text-end">TOTAL GLOBAL: $ <%= totalGlobal.toFixed(2) %></h4>

  <!-- Adjuntos (si quieres mostrar en APROBACION) -->
  <hr />
  <h4>Documentos Subidos:</h4>
  <% if (compraData.attachments && compraData.attachments.length>0) { %>
    <ul>
      <% compraData.attachments.forEach(a => { %>
        <li><a href="<%= a.url %>" target="_blank"><%= a.name %></a></li>
      <% }) %>
    </ul>
  <% } else { %>
    <p class="text-muted">No hay documentos subidos.</p>
  <% } %>

</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
// 1) Devolver a NEGOCIACION
async function volverNegociacion() {
  if(!confirm('¿Seguro deseas volver a NEGOCIACION?')) return;
  try {
    const resp = await fetch('/inventarios/popping/procesoCompra/<%= compraId %>/changeMainState', {
      method:'POST',
      headers:{ 'Content-Type':'application/json' },
      body: JSON.stringify({ newMainState: 'NEGOCIACION' })
    });
    const data= await resp.json();
    if(!data.success) {
      alert('Error: '+ data.error);
    } else {
      alert('Compra devuelta a NEGOCIACION');
      window.location.reload();
    }
  } catch(err){
    alert('Error: '+ err);
  }
}

// 2) Aprobar y Generar Orden => pasa a ORDEN_COMPRA
async function aprobarCompra() {
  if (!confirm('¿Seguro de aprobar y pasar a ORDEN_COMPRA?')) return;
  try {
    const r = await fetch('/inventarios/popping/procesoCompra/<%= compraId %>/changeMainState', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ newMainState: 'ORDEN_COMPRA' })
    });
    const d = await r.json();
    if (!d.success) alert('Error: ' + d.error);
    else {
      alert('Compra aprobada, generando Orden');
      window.location.reload();
    }
  } catch (err) {
    alert('Error: ' + err);
  }
}
</script>
</body>
</html>
